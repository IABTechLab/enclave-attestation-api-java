name: Create Release
on: 
  workflow_dispatch:
    inputs:
      releaseVersionOverride:
        description: "Release version override"
        required: false
        default: ''
      developmentVersionOverride:
        description: "Next development version override"
        required: false
        default: ''

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64

      - name: Set up Git
        run: |
          git config --global user.name ${{ secrets.GIT_USERNAME }}
          git config --global user.email ${{ secrets.GIT_USEREMAIL }}
      
      - name: Override versions
        run: |
          test ! -z "${{ github.event.inputs.releaseVersionOverride }}"  && \
          echo 'RELEASE_VERSION_OVERRIDE=-DreleaseVersion="${{ github.event.inputs.releaseVersionOverride }}"' >> $GITHUB_ENV || \
          echo "releaseVersionOverride is not set, use default release version"
          test ! -z "${{ github.event.inputs.developmentVersionOverride }}" && \
          echo 'DEVELOPMENT_VERSION_OVERRIDE=-DdevelopmentVersion="${{ github.event.inputs.developmentVersionOverride }}"' >> $GITHUB_ENV || \
          echo "developmentVersionOverride is not set, use default development version"

      - name: Prepare release
        run: |
          mvn -B clean release:prepare \
          -Dgithub_username=${{ secrets.GIT_USERNAME }} \
          -Dgithub_token=${{ secrets.GITHUB_TOKEN }} \
          -Dgithub_owner=${{ github.repository_owner }} \
          -Dgithub_owner_repo=${{ github.repository }} \
          ${{ env.RELEASE_VERSION_OVERRIDE }} \
          ${{ env.DEVELOPMENT_VERSION_OVERRIDE }}

      - name: Perform release
        run: |
          mvn -B release:perform \
          -Dgithub_username=${{ secrets.GIT_USERNAME }} \
          -Dgithub_token=${{ secrets.GITHUB_TOKEN }} \
          -Dgithub_owner=${{ github.repository_owner }} \
          -Dgithub_owner_repo=${{ github.repository }} \
          -Darguments="-Dgithub_owner_repo=${{ github.repository }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean temporary files
        run: mvn -B release:clean